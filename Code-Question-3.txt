// Step 1: Add dependencies in build.gradle (Module: app)
/*
dependencies {
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.bumptech.glide:glide:4.15.1'
}
*/

// Step 2: Create Model Class (Student.java)
package com.example.recyclerviewdemo;

public class Student {
    private String id;
    private String name;
    private String email;
    private String phone;
    private String major;
    private int profileImage;
    
    // Constructor
    public Student(String id, String name, String email, String phone, String major, int profileImage) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.phone = phone;
        this.major = major;
        this.profileImage = profileImage;
    }
    
    // Getters and Setters
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }
    
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    
    public String getPhone() { return phone; }
    public void setPhone(String phone) { this.phone = phone; }
    
    public String getMajor() { return major; }
    public void setMajor(String major) { this.major = major; }
    
    public int getProfileImage() { return profileImage; }
    public void setProfileImage(int profileImage) { this.profileImage = profileImage; }
}

// Step 3: Create Layout for RecyclerView Item (item_student.xml)
/*
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_margin="8dp"
    app:cardCornerRadius="12dp"
    app:cardElevation="4dp">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:padding="16dp">

        <ImageView
            android:id="@+id/ivProfileImage"
            android:layout_width="60dp"
            android:layout_height="60dp"
            android:layout_marginEnd="16dp"
            android:scaleType="centerCrop"
            android:src="@drawable/ic_student_placeholder"
            android:background="@drawable/circle_background" />

        <LinearLayout
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical">

            <TextView
                android:id="@+id/tvStudentName"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Student Name"
                android:textColor="#333333"
                android:textSize="18sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/tvStudentId"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="ID: ST001"
                android:textColor="#666666"
                android:textSize="14sp"
                android:layout_marginTop="2dp" />

            <TextView
                android:id="@+id/tvEmail"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="student@email.com"
                android:textColor="#666666"
                android:textSize="14sp"
                android:layout_marginTop="2dp" />

            <TextView
                android:id="@+id/tvMajor"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="Computer Science"
                android:textColor="#2196F3"
                android:textSize="14sp"
                android:textStyle="italic"
                android:layout_marginTop="4dp" />

        </LinearLayout>

        <ImageView
            android:id="@+id/ivMore"
            android:layout_width="24dp"
            android:layout_height="24dp"
            android:src="@drawable/ic_more_vert"
            android:layout_gravity="center_vertical"
            android:background="?android:attr/selectableItemBackground"
            android:padding="4dp" />

    </LinearLayout>

</androidx.cardview.widget.CardView>
*/

// Step 4: Create ViewHolder Class (StudentViewHolder.java)
package com.example.recyclerviewdemo;

import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

public class StudentViewHolder extends RecyclerView.ViewHolder {
    
    public ImageView ivProfileImage;
    public TextView tvStudentName;
    public TextView tvStudentId;
    public TextView tvEmail;
    public TextView tvMajor;
    public ImageView ivMore;
    
    public StudentViewHolder(@NonNull View itemView) {
        super(itemView);
        
        // Initialize views
        ivProfileImage = itemView.findViewById(R.id.ivProfileImage);
        tvStudentName = itemView.findViewById(R.id.tvStudentName);
        tvStudentId = itemView.findViewById(R.id.tvStudentId);
        tvEmail = itemView.findViewById(R.id.tvEmail);
        tvMajor = itemView.findViewById(R.id.tvMajor);
        ivMore = itemView.findViewById(R.id.ivMore);
    }
    
    // Bind data to views
    public void bind(Student student, OnStudentClickListener listener) {
        tvStudentName.setText(student.getName());
        tvStudentId.setText("ID: " + student.getId());
        tvEmail.setText(student.getEmail());
        tvMajor.setText(student.getMajor());
        
        // Set profile image
        if (student.getProfileImage() != 0) {
            ivProfileImage.setImageResource(student.getProfileImage());
        }
        
        // Set click listeners
        itemView.setOnClickListener(v -> {
            if (listener != null) {
                listener.onStudentClick(student, getAdapterPosition());
            }
        });
        
        ivMore.setOnClickListener(v -> {
            if (listener != null) {
                listener.onMoreClick(student, getAdapterPosition());
            }
        });
    }
    
    // Interface for click events
    public interface OnStudentClickListener {
        void onStudentClick(Student student, int position);
        void onMoreClick(Student student, int position);
    }
}

// Step 5: Create Adapter Class (StudentAdapter.java)
package com.example.recyclerviewdemo;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import java.util.List;

public class StudentAdapter extends RecyclerView.Adapter<StudentViewHolder> {
    
    private Context context;
    private List<Student> studentList;
    private StudentViewHolder.OnStudentClickListener listener;
    
    // Constructor
    public StudentAdapter(Context context, List<Student> studentList) {
        this.context = context;
        this.studentList = studentList;
    }
    
    // Set click listener
    public void setOnStudentClickListener(StudentViewHolder.OnStudentClickListener listener) {
        this.listener = listener;
    }
    
    @NonNull
    @Override
    public StudentViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        // Inflate layout for each item
        View view = LayoutInflater.from(context).inflate(R.layout.item_student, parent, false);
        return new StudentViewHolder(view);
    }
    
    @Override
    public void onBindViewHolder(@NonNull StudentViewHolder holder, int position) {
        // Bind data to ViewHolder
        Student student = studentList.get(position);
        holder.bind(student, listener);
    }
    
    @Override
    public int getItemCount() {
        return studentList != null ? studentList.size() : 0;
    }
    
    // Methods for data manipulation
    public void addStudent(Student student) {
        studentList.add(student);
        notifyItemInserted(studentList.size() - 1);
    }
    
    public void removeStudent(int position) {
        if (position >= 0 && position < studentList.size()) {
            studentList.remove(position);
            notifyItemRemoved(position);
        }
    }
    
    public void updateStudent(int position, Student student) {
        if (position >= 0 && position < studentList.size()) {
            studentList.set(position, student);
            notifyItemChanged(position);
        }
    }
    
    public void updateList(List<Student> newList) {
        this.studentList = newList;
        notifyDataSetChanged();
    }
    
    // Filter method
    public void filter(List<Student> filteredList) {
        studentList = filteredList;
        notifyDataSetChanged();
    }
}

// Step 6: Create Main Activity Layout (activity_main.xml)
/*
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="#F5F5F5">

    <!-- Toolbar -->
    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="@color/purple_500"
        app:title="Student List"
        app:titleTextColor="@android:color/white" />

    <!-- Search View -->
    <androidx.cardview.widget.CardView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        app:cardCornerRadius="8dp"
        app:cardElevation="2dp">

        <SearchView
            android:id="@+id/searchView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:queryHint="Search students..."
            android:iconifiedByDefault="false" />

    </androidx.cardview.widget.CardView>

    <!-- RecyclerView -->
    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:padding="8dp"
        android:clipToPadding="false" />

    <!-- Floating Action Button -->
    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/fabAdd"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom|end"
        android:layout_margin="16dp"
        android:src="@drawable/ic_add"
        app:backgroundTint="@color/purple_500" />

</LinearLayout>
*/

// Step 7: MainActivity Implementation (MainActivity.java)
package com.example.recyclerviewdemo;

import android.os.Bundle;
import android.widget.SearchView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.DividerItemDecoration;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity implements StudentViewHolder.OnStudentClickListener {
    
    private RecyclerView recyclerView;
    private StudentAdapter adapter;
    private List<Student> studentList;
    private List<Student> filteredList;
    private SearchView searchView;
    private FloatingActionButton fabAdd;
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        initViews();
        setupRecyclerView();
        loadSampleData();
        setupSearchView();
        setupFab();
    }
    
    private void initViews() {
        recyclerView = findViewById(R.id.recyclerView);
        searchView = findViewById(R.id.searchView);
        fabAdd = findViewById(R.id.fabAdd);
    }
    
    private void setupRecyclerView() {
        // Initialize lists
        studentList = new ArrayList<>();
        filteredList = new ArrayList<>();
        
        // Setup adapter
        adapter = new StudentAdapter(this, filteredList);
        adapter.setOnStudentClickListener(this);
        
        // Setup RecyclerView
        recyclerView.setAdapter(adapter);
        
        // Set LayoutManager (វិធីរៀបចំ items)
        LinearLayoutManager layoutManager = new LinearLayoutManager(this);
        recyclerView.setLayoutManager(layoutManager);
        
        // Add dividers between items
        DividerItemDecoration divider = new DividerItemDecoration(this, DividerItemDecoration.VERTICAL);
        recyclerView.addItemDecoration(divider);
        
        // Optional: Set item animator
        // recyclerView.setItemAnimator(new DefaultItemAnimator());
    }
    
    private void loadSampleData() {
        // Add sample students
        studentList.add(new Student("ST001", "Sok Pisey", "pisey@gmail.com", "+855 12 345 678", "Computer Science", R.drawable.ic_student_1));
        studentList.add(new Student("ST002", "Chan Dara", "dara@gmail.com", "+855 98 765 432", "Information Technology", R.drawable.ic_student_2));
        studentList.add(new Student("ST003", "Lim Sophea", "sophea@gmail.com", "+855 77 888 999", "Software Engineering", R.drawable.ic_student_3));
        studentList.add(new Student("ST004", "Noun Sreyleak", "sreyleak@gmail.com", "+855 89 123 456", "Data Science", R.drawable.ic_student_4));
        studentList.add(new Student("ST005", "Keo Pisach", "pisach@gmail.com", "+855 70 555 777", "Cybersecurity", R.drawable.ic_student_5));
        studentList.add(new Student("ST006", "Touch Sovannak", "sovannak@gmail.com", "+855 85 333 444", "Computer Science", R.drawable.ic_student_1));
        studentList.add(new Student("ST007", "Heng Sreypov", "sreypov@gmail.com", "+855 92 666 888", "Information Technology", R.drawable.ic_student_2));
        studentList.add(new Student("ST008", "San Kimheng", "kimheng@gmail.com", "+855 78 111 222", "Software Engineering", R.drawable.ic_student_3));
        
        // Copy to filtered list and notify adapter
        filteredList.addAll(studentList);
        adapter.notifyDataSetChanged();
    }
    
    private void setupSearchView() {
        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String query) {
                filterStudents(query);
                return true;
            }
            
            @Override
            public boolean onQueryTextChange(String newText) {
                filterStudents(newText);
                return true;
            }
        });
    }
    
    private void filterStudents(String query) {
        filteredList.clear();
        
        if (query.isEmpty()) {
            filteredList.addAll(studentList);
        } else {
            String lowerCaseQuery = query.toLowerCase().trim();
            for (Student student : studentList) {
                if (student.getName().toLowerCase().contains(lowerCaseQuery) ||
                    student.getId().toLowerCase().contains(lowerCaseQuery) ||
                    student.getEmail().toLowerCase().contains(lowerCaseQuery) ||
                    student.getMajor().toLowerCase().contains(lowerCaseQuery)) {
                    filteredList.add(student);
                }
            }
        }
        
        adapter.notifyDataSetChanged();
    }
    
    private void setupFab() {
        fabAdd.setOnClickListener(v -> {
            // Add new student (example)
            Student newStudent = new Student(
                "ST" + String.format("%03d", studentList.size() + 1),
                "New Student",
                "new@student.com",
                "+855 12 000 000",
                "Computer Science",
                R.drawable.ic_student_1
            );
            
            studentList.add(newStudent);
            filterStudents(searchView.getQuery().toString());
            
            Toast.makeText(this, "New student added!", Toast.LENGTH_SHORT).show();
        });
    }
    
    // Click event implementations
    @Override
    public void onStudentClick(Student student, int position) {
        Toast.makeText(this, "Clicked: " + student.getName(), Toast.LENGTH_SHORT).show();
        // Navigate to student details or perform action
    }
    
    @Override
    public void onMoreClick(Student student, int position) {
        Toast.makeText(this, "More options for: " + student.getName(), Toast.LENGTH_SHORT).show();
        // Show popup menu or options
    }
}
